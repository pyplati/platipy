{
  "name": "platipy rtstruct_to_nifti.convert_rtstruct",
  "label": "platipy rtstruct_to_nifti.convert_rtstruct",
  "description": "Convert RTSTRUCT files to NIfTI using platipy",
  "version": "1.0",
  "schema-version": "1.0",
  "info-url": "None",
  "image": "",  // update
  "type": "docker",
  "command-line": "run_convert_rtstruct.py /input",  // update - work out best way to supply args
  "mounts": [
    {
      "name": "input-dcm-mount",
      "writable": false,
      "path": "/input-dcm"
    },
    {
      "name": "input-rtstruct-mount",
      "writable": false,
      "path": "/input-rtstruct"
    },
    {
      "name": "output-mount",
      "writable": true,
      "path": "/output"
    }
  ],
  "environment-variables": {},
  "ports": {},
  "inputs": [],
  "outputs": [  // update - possibly need one for output-nifti-dcm as well
    {
      "name": "output-nifti-rtstruct",
      "description": "The input RTSTRUCT has been converted to NIfTI",
      "required": true,
      "mount": "output-mount",
      "path": null,
      "glob": null
    }
  ],
  "xnat": [
    {
      "name": "platipy rtstruct_to_nifti.convert_rtstruct",
      "label": null,
      "description": "Run RTSRUCT to NIfTI conversion from a Session",
      "contexts": [
        "xnat:imageSessionData"
      ],
      "external-inputs": [
        {
          "name": "session",
          "label": null,
          "description": "Input session",
          "type": "Session",
          "matcher": null,
          "default-value": null,
          "required": true,
          "replacement-key": null,
          "sensitive": null,
          "provides-value-for-command-input": null,
          "provides-files-for-command-mount": null,
          "via-setup-command": null,
          "user-settable": null,
          "load-children": true
        }
      ],
      "derived-inputs": [
        {
          "name": "input-dcm",
          "label": null,
          "description": "The input DICOM dataset associated with the RTSTRUCT",
          "type": "Scan",  // update?
          "matcher": "'DICOM' in @.resources[*].label", // update
          "default-value": null,
          "required": true,
          "replacement-key": null,
          "sensitive": null,
          "provides-value-for-command-input": null,
          "provides-files-for-command-mount": null,
          "user-settable": null,
          "load-children": true,
          "derived-from-wrapper-input": "session",  // update?
          "derived-from-xnat-object-property": null,
          "via-setup-command": null,
          "multiple": false,
          "parser": null
        },
        {
          "name": "input-rtstruct",
          "label": null,
          "description": "The input RTSTRUCT",
          "type": "Resource",  // update?
          "matcher": "@.label == 'DICOM'",  // update
          "default-value": null,
          "required": true,
          "replacement-key": null,
          "sensitive": null,
          "provides-value-for-command-input": null,
          "provides-files-for-command-mount": "input-scan-mount",
          "user-settable": null,
          "load-children": true,
          "derived-from-wrapper-input": "input-scan",  // update?
          "derived-from-xnat-object-property": null,
          "via-setup-command": null,
          "multiple": false,
          "parser": null
        },
        {
          "name": "input-scan-id",  // update all of below? require one id for rtstruct and one for dcm img?
          "label": null,
          "description": "The input scan's id",
          "type": "string",
          "matcher": null,
          "default-value": null,
          "required": true,
          "replacement-key": null,
          "sensitive": null,
          "provides-value-for-command-input": null,
          "provides-files-for-command-mount": null,
          "user-settable": null,
          "load-children": true,
          "derived-from-wrapper-input": "input-scan",
          "derived-from-xnat-object-property": "id",
          "via-setup-command": null,
          "multiple": false,
          "parser": null
        }
      ],
      "output-handlers": [  // update below - possibly need one each for rtstruct nifti and dcm nifti
        {
          "name": "output-nifti-rtstruct",
          "accepts-command-output": "output-nifti-rtstruct",
          "via-wrapup-command": null,
          "as-a-child-of": "input-rtstruct",
          "type": "Resource",  // update?
          "label": "nifti_#input-scan-id#",
          "format": null,
          "description": null,
          "content": null,
          "tags": []
        }
      ]
    }
  ],
  "container-labels": {},
  "generic-resources": {},
  "ulimits": {}
}